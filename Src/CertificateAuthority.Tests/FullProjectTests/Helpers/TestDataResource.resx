<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CertificateRequest1" xml:space="preserve">
    <value>-----BEGIN CERTIFICATE REQUEST----- MIIEzzCCArcCAQAwczELMAkGA1UEBhMCUVExCzAJBgNVBAgMAlFRMQswCQYDVQQH DAJRUTELMAkGA1UECgwCUVExCzAJBgNVBAsMAlFRMREwDwYDVQQDDAhzdWJjZXJ0 MTEdMBsGCSqGSIb3DQEJARYOcXdlcXdlQHF3ZS5xd2UwggIiMA0GCSqGSIb3DQEB AQUAA4ICDwAwggIKAoICAQC+oNOAhdNLMeTkycQtmj3cD3jf0BqlPH4Rz7Q4EZtE Gh+x3dkBEMoZigj1WGgwc+A3eNEtr1gS3TTldld3J9S7xlBQWXOyvSMaMDtMJ5uT uiSWnH0Kn8sYHsyLb1Nibx7GvHPdmOIJHrm4XcLJmXAinaeLCcHOEqfwMBkTIeDG e4NOT3o6UjnuCaHam1vOf+fNPo/+1fZGBlp4imfQf5L8EDH9JGPlVFxQa1jNuM5t XhntNIOMiZxV0C2v7HRnnLQ+YazfFxBqnHatXkwh2dNshClkKI8f/BzxtYSLuWyg 2VAFkWSByzdupOMuUD2levjoRJDiNqHag9GKivuLaXiY9fk0jcBMjcir4clQSGTR IRf1SE66ZllplzSBEx+5mjPOH2JGe9lxyoba1+g+Q1ggp05tiTMFrFbNQXiiTpt+ lrQuVLHHYBLYNuqXFSPd6+LWhyhPdhq2LK17HPWKT92Hmo0NXjEgl9ul7w23drDd AtKYSRF5fKVwMmlRWAvDctRjIAl/ZrKvw76Jw1Z1tTUhK5yXJm8fU9nyURx6RYN3 w78C6Nh6aGEwnKJv7IyrHnUbGndARdzjHNSHtA+yNZW28no5f8c68+coa3LsCkj5 /OeDmHE95s1SBfLAph/mhCf2KhOkez4pgeR7yuH1Jctn0JTX6lYM1M4p52Cb7IUS FwIDAQABoBcwFQYJKoZIhvcNAQkHMQgMBnF3ZXF3ZTANBgkqhkiG9w0BAQsFAAOC AgEAAAHFpVPh2x4+2scyuICHun4t8iaNBgeyhX5ZAbHe8g1zZf2MOUsAbtY6y1BG rOawahLA9nkEf0rrxKg+Cj+j/cbNC8SjrdJ2Q+/XyeG2kaU0F9VYSG0pzU2zhRB1 aI96/2PFJ/oE/dqWE4ZZkKT8ftR028SGbrv3fbJTys7dV+5iR3YX2n3V4WnutWYY qoUQjJKTWVeN8wH0ZNP2+LH8BSYsjjkgaVEaP4clV/cXUW3LCYYZdMod8ozxor2/ Y9xT2HvFXY2VpdFxS+RpPQ+1PQrluPVjYKB+OJP1Navtpi5vHLEmwqA/JTEHsnRs JczkDQNATwrpJ7xr5CBnwsBZo6wgOPSqJN9IdlO+62sj3/nRYm0hv6Uazb7huvNV Ng6fDJKkN0ZqzOfgfeU3+UypeSvdyZ23csrmJH2OyoOGR7JZtmQk6ktYWPk50Y4e jIsXv3mvsZY9SeQJSp9/q8S9hCRHmbpNO8gDXfu7EPKG5J4gCl7EjApuuv+GaNP4 tTu40tKwpAHxj8RkB7At7dpPcbzGbc9Kv0A1l9IGgDMQgW1S7CaYTclh+zMbvH4T 93vpG4AQGkdUI/PlxPQJIJ+YaWDHtNuzvHPvKI2ltqpd2/MWUoxHD+GcpD7+zlvl +ttBqoXq7up9bJGPRjQcH40ZpX0x0rK+NQheeQP/kEh6t0Y= -----END CERTIFICATE REQUEST-----</value>
  </data>
  <data name="CertificateRequest2" xml:space="preserve">
    <value>-----BEGIN CERTIFICATE REQUEST----- MIIE1jCCAr4CAQAwejELMAkGA1UEBhMCcXcxCzAJBgNVBAgMAnF3MQswCQYDVQQH DAJxdzELMAkGA1UECgwCcXcxCzAJBgNVBAsMAnF3MRUwEwYDVQQDDAxjZXJ0UmVx dWVzdDIxIDAeBgkqhkiG9w0BCQEWEXF3ZUBxd2Vxd2Vxd2UucXdlMIICIjANBgkq hkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxvT2sYqPjlMWfx3TxzaO6xRrqeiMuzuM xhxjbiL2g+v0T0uNT+nBRgvph6wGE2L8NsgVTsUS4tUo/PBx3DxmrFlZT4FEcIuk LIePUFgTyWmWRm/B69oomb0BiaoLPV+USS26OFkm+RPdc2vDXL23y38HNVmNeR7s P++B7uDUzjJmyqEFaPxGBbR/KakYAx/onMZNZymMwwe9Ly0DhHL9w9NG0hqQr6gO dCHPBItjaZv9yr6x4ZhsveqqB7qNLRwRrd5XjjE/heNj5mLU35g5LxuVQN6J05Np j8JKINxNFh7vj11aDziVdufx8n1oB1bpYIjPO5QwneA7Os4IvfMcOAIsc/rFBp10 YbT5+ouhbOwYjsHMe29O3UTSxa6bSbD8L2ihpXIcVD1/hp2YAGFQ+P9SVRL2h7K1 wUBj8SMhQV8TY5gSZraNvSoMuBjmYEGpKjKLlE6cPr06fgWFyVPfkELVU3kjIh+6 3oXM96cJNjNmFEPFuCyIq0etHAD/S90S0udTfj/u35ceatT9/tw5jN4EpsYq3v53 90DLpmbP+JKRJc/DS9LGqaTwLcIDmms2SP7QQqVkfhQCJL6nkmtxXUTM1IqMqbHh /hEaNp/hha4WdIbz3Oc84g9RuS+jEq5UTIXNgrY8MYmcmMaKVctf3c/TRbz4MRZ7 MJF0jrOZJtkCAwEAAaAXMBUGCSqGSIb3DQEJBzEIDAZxd2Vxd2UwDQYJKoZIhvcN AQELBQADggIBAJDPVQIPj7YMjCXeUz3zmaMp0EcEF1BBP/6TJnvWK9i9l+LVtNAH pCEQDMivO3qFV5arpxyyC0eQkHqRcMoKe9jtkZQAFuIOJCwwAV/pyJm/3WBrrs2H wxUk8tQNtwBziywoJPJpYcnBgVgYa6KXtG+2GNP5ffm0yc4y+j8C6o6bIbd/2NyI gGspJaC4N2iE1uEGqb1c3kHXWDCDXct5Xq+q4tIq+7KGI2Cf0Nm8GjdVl7lejd55 WOR4HH74XBJH3P92FokYqvvT6BKtopZG/1WhJ7XK135Zr2SIP051Ll6Gov/i+kO1 RqIDaZ5o32F+uriaPsRAYVB6OkIiDaCZwFaxaRCOqUiq8IqEBnROl5SdjHeJyjvt n/gco3eOI0WdG5/fM5DWpeWqcP1HImbY0D6jmrcpBxh9pzsIskSvh1bjjvtgKoVU Xkd9bdHEVsHkpXjztweRxZWNQIt4/P5bAd29QC77NeulW6dyQ1VgBprVZLDWlAs+ 2IpYg1u4/hr6BAc1Wo9AK5pwUB43Hlxma0EBqVns5spXcWfTO5/9QEkntwIJPi/x 79pteeot4SzcFPkl0hcXix6VnDjI8AFLkN/Dn4SM+vZ5bml+AJiDB7FMulECGJeP 2bBKy8z3ZkSzEFTNwdtU1DAIbutKWTZMZ3A5z8h+riZzkK0dI7w1gjwn -----END CERTIFICATE REQUEST-----</value>
  </data>
</root>